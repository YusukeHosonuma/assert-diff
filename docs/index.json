{"repository_name":"assert-diff","body":"# assert-diff\n\nAssert equals with readable diff report.\n\n![screenshot](https://github.com/YusukeHosonuma/assert-diff/raw/main/image/screenshot.png)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   development_dependencies:\n     assert-diff:\n       github: YusukeHosonuma/assert-diff\n       branch: main\n   ```\n\n2. Run `shards install`\n\n## Example\n\nUse in specs:\n\n```crystal\nrequire \"assert-diff\"\n\nstruct Rectangle\n  def initialize(@origin : Point, @width : Int32, @height : Int32)\n  end\nend\n\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\ndescribe Rectangle do\n  describe \"example\" do\n    it \"failed\" do\n      a = Rectangle.new(Point.new(0, 0), 4, 3)\n      b = Rectangle.new(Point.new(0, 1), 4, 7)\n      assert_diff(a, b)\n    end\n  end\nend\n```\n\nUse to output:\n\n```crystal\nprint_diff(a, b)\nprint_diff_full(a, b)\n```\n\n## Contributing\n\nI don't think it can be used for edge cases.  \nIssues and PRs are welcome.\n\n1. Fork it (<https://github.com/YusukeHosonuma/assert-diff/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Yusuke Hosonuma](https://github.com/YusukeHosonuma) - creator and maintainer\n","program":{"html_id":"assert-diff/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"assert-diff","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"assert_diff(before:A,after:B,file=__FILE__,line=__LINE__)forallA,B-class-method","html_id":"assert_diff(before:A,after:B,file=__FILE__,line=__LINE__)forallA,B-class-method","name":"assert_diff","doc":"Assert equals with diff report.\n\nConsecutive no-changed are ommited like \"...\".\nUse `.assert_diff_full` if you need full-report.\n\n```\nstruct Rectangle\n  def initialize(@origin : Point, @width : Int32, @height : Int32)\n  end\nend\n\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\ndescribe Rectangle do\n  describe \"example\" do\n    it \"failed\" do\n      a = Rectangle.new(Point.new(0, 0), 4, 3)\n      b = Rectangle.new(Point.new(0, 1), 4, 7)\n      assert_diff(a, b)\n    end\n  end\nend\n\n# Expected: {\"origin\" => {\"x\" => 0, \"y\" => 1}, \"width\" => 4, \"height\" => 7}\n#      got: {\"origin\" => {\"x\" => 0, \"y\" => 0}, \"width\" => 4, \"height\" => 3}\n#     diff:   {\n#           -   height: 3,\n#           +   height: 7,\n#               origin: {\n#                 ...\n#           -     y: 0,\n#           +     y: 1,\n#               }\n#               ...\n#             }\n```","summary":"<p>Assert equals with diff report.</p>","abstract":false,"args":[{"name":"before","doc":null,"default_value":"","external_name":"before","restriction":"A"},{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":"B"},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":""}],"args_string":"(before : A, after : B, file = __FILE__, line = __LINE__) forall A, B","args_html":"(before : A, after : B, file = __FILE__, line = __LINE__) forall A, B","location":{"filename":"src/assert-diff/assert.cr","line_number":40,"url":"https://github.com/YusukeHosonuma/assert-diff/blob/50c81911254ac08dd47d74abf963f1b8d5d52e0a/src/assert-diff/assert.cr#L40"},"def":{"name":"assert_diff","args":[{"name":"before","doc":null,"default_value":"","external_name":"before","restriction":"A"},{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":"B"},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  before.should(eq(after))\nrescue ex : Spec::AssertionFailed\n  throw_assertion(ex, before, after, file, line, true)\nend"}},{"id":"assert_diff_full(before:A,after:B,file=__FILE__,line=__LINE__)forallA,B-class-method","html_id":"assert_diff_full(before:A,after:B,file=__FILE__,line=__LINE__)forallA,B-class-method","name":"assert_diff_full","doc":"Assert equals with full diff report.\n\n```\nstruct Rectangle\n  def initialize(@origin : Point, @width : Int32, @height : Int32)\n  end\nend\n\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\ndescribe Rectangle do\n  describe \"example\" do\n    it \"failed\" do\n      a = Rectangle.new(Point.new(0, 0), 4, 3)\n      b = Rectangle.new(Point.new(0, 1), 4, 7)\n      assert_diff(a, b)\n    end\n  end\nend\n# Expected: {\"origin\" => {\"x\" => 0, \"y\" => 1}, \"width\" => 4, \"height\" => 7}\n#      got: {\"origin\" => {\"x\" => 0, \"y\" => 0}, \"width\" => 4, \"height\" => 3}\n#     diff:   {\n#           -   height: 3,\n#           +   height: 7,\n#               origin: {\n#                 x: 0,\n#           -     y: 0,\n#           +     y: 1,\n#               },\n#               width: 4,\n#             }\n```","summary":"<p>Assert equals with full diff report.</p>","abstract":false,"args":[{"name":"before","doc":null,"default_value":"","external_name":"before","restriction":"A"},{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":"B"},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":""}],"args_string":"(before : A, after : B, file = __FILE__, line = __LINE__) forall A, B","args_html":"(before : A, after : B, file = __FILE__, line = __LINE__) forall A, B","location":{"filename":"src/assert-diff/assert.cr","line_number":83,"url":"https://github.com/YusukeHosonuma/assert-diff/blob/50c81911254ac08dd47d74abf963f1b8d5d52e0a/src/assert-diff/assert.cr#L83"},"def":{"name":"assert_diff_full","args":[{"name":"before","doc":null,"default_value":"","external_name":"before","restriction":"A"},{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":"B"},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":""},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  before.should(eq(after))\nrescue ex : Spec::AssertionFailed\n  throw_assertion(ex, before, after, file, line, false)\nend"}},{"id":"print_diff(before,after,io:IO=STDOUT)-class-method","html_id":"print_diff(before,after,io:IO=STDOUT)-class-method","name":"print_diff","doc":"Print diff to *io*.\n\nConsecutive no-changed are ommited like \"...\".\nUse `.assert_diff_full` if you need full-report.\n\n```\na = Rectangle.new(Point.new(0, 0), 4, 3)\nb = Rectangle.new(Point.new(0, 1), 4, 7)\nprint_diff(a, b)\n# =>\n#   {\n# -   height: 3,\n# +   height: 7,\n#     origin: {\n#       ...\n# -     y: 0,\n# +     y: 1,\n#     },\n#     ...\n#   }\n```","summary":"<p>Print diff to <em>io</em>.</p>","abstract":false,"args":[{"name":"before","doc":null,"default_value":"","external_name":"before","restriction":""},{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":""},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"args_string":"(before, after, io : IO = <span class=\"t\">STDOUT</span>)","args_html":"(before, after, io : IO = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/assert-diff/methods.cr","line_number":24,"url":"https://github.com/YusukeHosonuma/assert-diff/blob/50c81911254ac08dd47d74abf963f1b8d5d52e0a/src/assert-diff/methods.cr#L24"},"def":{"name":"print_diff","args":[{"name":"before","doc":null,"default_value":"","external_name":"before","restriction":""},{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":""},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"print_diff_to_io(before, after, true, io)"}},{"id":"print_diff_full(before,after,io:IO=STDOUT)-class-method","html_id":"print_diff_full(before,after,io:IO=STDOUT)-class-method","name":"print_diff_full","doc":"Print full diff to *io*.\n\n```\na = Rectangle.new(Point.new(0, 0), 4, 3)\nb = Rectangle.new(Point.new(0, 1), 4, 7)\nprint_diff_full(a, b)\n# =>\n# {\n# -   height: 3,\n# +   height: 7,\n#     origin: {\n#       x: 0,\n# -     y: 0,\n# +     y: 1,\n#     },\n#     width: 4,\n# }\n```","summary":"<p>Print full diff to <em>io</em>.</p>","abstract":false,"args":[{"name":"before","doc":null,"default_value":"","external_name":"before","restriction":""},{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":""},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"args_string":"(before, after, io : IO = <span class=\"t\">STDOUT</span>)","args_html":"(before, after, io : IO = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/assert-diff/methods.cr","line_number":46,"url":"https://github.com/YusukeHosonuma/assert-diff/blob/50c81911254ac08dd47d74abf963f1b8d5d52e0a/src/assert-diff/methods.cr#L46"},"def":{"name":"print_diff_full","args":[{"name":"before","doc":null,"default_value":"","external_name":"before","restriction":""},{"name":"after","doc":null,"default_value":"","external_name":"after","restriction":""},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"print_diff_to_io(before, after, false, io)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}}